{"version":3,"sources":["assets/image/logo.png","assets/image/background.png","assets/image/heading.png","services/objects.js","services/DfuseRequestHooks.js","settings.js","services/Accountability.js","services/Api.js","services/Contract.js","types/civic.js","services/Civic.js","pages/Home/Home.js","hooks/storage.js","hooks/authContext.js","components/Button.js","components/TextInput.js","components/PasswordInput.js","components/Themes.js","pages/Login/Login.js","pages/CreateAccount/CreateAccount.js","pages/Security/Security.js","components/Location/Autocomplete.js","components/Location/Marker.js","components/Location/LocationGooglMap.js","components/Navbar/Navbar.js","pages/ProposalCreate/ProposalCreate.js","pages/Dashboard/Card.js","pages/Dashboard/Map.js","pages/Dashboard/Dashboard.js","routes.js","providers.js","App.js","index.js"],"names":["module","exports","wait","ms","a","Promise","res","setTimeout","interceptorHooks","stateTable","pre","post","searchTransactions","fetch","window","authHeader","accountName","permission","privKey","pubKey","now","Date","toISOString","AuthName","AuthPerm","AuthKey","AuthSignature","ecc","sign","AuthData","addAuthHeader","args","requestOptions","headers","url","method","includes","result","settings","eosio","nodeos","blockExplorerUrl","dfuseOptions","apiKey","authUrl","secure","network","google","env","isLiveEnvironment","Accountability","this","rpc","JsonRpc","dfuseClient","createDfuseClient","account","obj","accountCopy","Object","assign","signatureProvider","JsSignatureProvider","privateToPublic","api","TextEncoder","Api","textDecoder","TextDecoder","textEncoder","receiver","action","data","options","txData","actions","name","authorization","actor","transact2","transact","blocksBehind","expireSeconds","tx","processed","error_code","Error","status","receipt","console","log","RpcError","error","JSON","stringify","json","timePoint","axios","create","baseURL","Contract","contractAccount","get_abi","abi","c","fields","structs","forEach","struct","type","len","length","i","scope","primaryKey","keyType","stateTableRow","tables","ProposalCategory","ProposalType","ProposalStatus","Civic","accountability","civicContract","commonName","login","initializeContract","privateKey","password","seedPrivate","crypto","createHash","update","digest","response","parseAccountRes","get_account","proposal","propcreate","title","description","category","budget","location","fetchTransaction","transaction_id","txDetailed","blockNum","execution_trace","action_traces","block_num","stateAbiBinToJson","dbops","new","hex","decodedRows","decodedRow","rows","proposalDetailed","proposalId","proposal_id","created","photos","updater","new_status","regulations","comment","timePointToDate","updated","approved","vote","proposals","proposalsQuery","filter","x","map","voted","yesVoteCount","yes_vote_count","sort","b","proposalsRow","row","q","proposalQuery","proposalTxs","transactions","proposalsActions","lifecycle","actionData","act","proposalData","txId","id","timestamp","block_time","authHuman","account_authorizers","authHumanCommonName","account_authorizers_common_names","mapActionToStatus","push","val","account_name","permissions","contractDeployed","last_code_update","lastContractUpdate","actionName","createLocation","lng","Math","random","lat","Home","useEffect","civic","accountLogin","accountLoginRes","accountCreate","accountCreateRes","proposalCreate","proposalUpdate","proposalUpdateRes","regulation","proposalVote","proposalVoteRes","proposalList","proposalGet","proposalDetails","proposalHistory","main","setUserStorage","user","localStorage","setItem","getUserStorage","userStr","getItem","parse","clearUserStorage","removeItem","authContext","createContext","ProvideAuth","children","authProvider","useState","isLoggedInValue","setIsLoggedIn","accountLoginWithKey","isLoggedIn","createAccount","logout","useProvideAuth","Provider","value","ConsumeAuth","useContext","ButtonComponent","text","loading","backgroundColor","color","loaderColor","CircularProgressComponent","withStyles","root","CircularProgress","Button","borderRadius","border","height","width","padding","marginLeft","label","textTransform","ButtonSourceComponent","disabled","size","className","TextInput","props","classes","makeStyles","theme","display","flexWrap","margin","spacing","commonText","borderBottomColor","useStyles","defaultText","Grid","TextField","inputRef","registerRef","errors","render","messages","entries","message","key","PasswordInput","withoutLabel","marginTop","textField","amount","weight","weightRange","showPassword","values","setValues","FormControl","clsx","InputLabel","htmlFor","Input","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","event","preventDefault","createMuiTheme","typography","fontFamily","join","GreenTextTypography","fontSize","Typography","TitleSmallTextTypography","fontWeight","TitleLargeTextTypography","HtmlTooltip","tooltip","maxWidth","pxToRem","Tooltip","backgroundStyle","style","backgroundImage","background","backgroundSize","backgroundRepeat","backgroundPosition","Login","history","useHistory","React","setLoading","open","setOpen","setMessage","handleClose","_","reason","useForm","criteriaMode","register","handleSubmit","onSubmit","username","GreenSmallTypography","LogoIcon","lineHeight","AccountCircle","LoginLock","Lock","TitleLoginTypography","TitleLock","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Fragment","container","direction","item","xs","justify","alignContent","variant","alignItems","required","Link","ExpandMore","arrow","interactive","CreateAccount","watch","firstname","lastname","GreenSmallTypographyCreate","CreateLock","LogoCreateUserIcon","LogoCreateTitle","pattern","minLength","validate","ExpandLess","Security","AutoComplete","handleChange","prop","setState","target","onPlaceChanged","addplace","place","autoComplete","getPlace","geometry","viewport","fitBounds","setCenter","setZoom","searchInput","blur","clearSearchBox","bind","mapApi","types","places","Autocomplete","addListener","bindTo","clearInstanceListeners","ref","onFocus","placeholder","Component","Wrapper","styled","div","Marker","alt","defaultProps","LocationGooglMap","state","mapApiLoaded","mapInstance","geoCoder","center","zoom","address","draggable","onMarkerInteraction","childKey","childProps","mouse","onMarkerInteractionMouseUp","_generateAddress","_onChange","_onClick","apiHasLoaded","maps","addPlace","setCurrentLocation","Geocoder","geocode","results","formatted_address","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","onChange","onChildMouseDown","onChildMouseUp","onChildMouseMove","bootstrapURLKeys","libraries","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","flexGrow","navbar","logo","logoImage","maxHeight","logoContainer","searchContainer","minWidth","justifyContent","formControl","borderColor","top","inputLabel","searchIcon","buttonContainer","marginRight","LogoTitle","CreateButton","DashboardButton","Navbar","selectedProposal","setSelectedProposal","src","NativeSelect","input","opacity","textAlign","budgetInputStyle","paddingTop","categoryTitle","paddingBottom","borderBottom","inputTitle","disableUnderline","inputLabelTitle","HearderCustomizeStar","marginBottom","Stars","TitleCategoryTypography","ImageDragTypography","CategoryCheckbox","checked","Checkbox","UploadButton","UploadSmallTypographyCreate","UploadLock","ProposalCreate","content","checkedA","checkedB","checkedC","checkedD","checkedE","checkedF","checkedG","checkedH","stateCheckBox","setStateCheckBox","valueBudget","setValueBudget","setDescription","files","setFiles","hasErrorType","setHasError","hasErrorCateory","setHasErrorCategory","hasErrorDescription","setHasErrorDescription","hasErrorTitle","setHasErrorTitle","setTitle","handleChangeCheckboxs","InputProps","InputLabelProps","e","FormHelperText","currencySymbol","outputFormat","decimalCharacter","digitGroupSeparator","Select","native","inputProps","sm","FormControlLabel","control","maxLength","helperText","multiline","fullWidth","dropzoneText","handleDropDownImage","filesLimit","CardTitle","cursor","CardContentDescription","ReadmoreButton","Card","mainContainer","cardWrap","paper","image","img","cardContent","cardTitle","minHeight","selected","Paper","ButtonBase","imageUrl","Logo","slice","onButtonClick","MapContainer","currentPosition","setCurrentPosition","googleMapsApiKey","mapContainerStyle","onSelect","onCloseClick","parseLocation","parseFloat","split","overflowY","Dashboard","setProposalList","setSelected","Map","Routes","exact","path","AppProviders","App","ThemeProvider","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4179e48f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.91be8817.png\";","module.exports = __webpack_public_path__ + \"static/media/background.636ec7d1.png\";","module.exports = __webpack_public_path__ + \"static/media/heading.6ad594bb.png\";","export async function wait(ms) {\n    return new Promise((res) => {\n        setTimeout(() => {\n            res();\n        }, ms);\n    })\n}\n\nexport function copyObj(obj) {\n    return Object.assign({}, obj);\n}","import ecc from 'eosjs-ecc';\n\nconst interceptorHooks = {\n    stateTable: {\n        pre: () => { },\n        post: () => { }\n    },\n    searchTransactions: {\n        pre: () => { },\n        post: () => { }\n    },\n}\n\n// https://stackoverflow.com/questions/45425169/intercept-fetch-api-responses-and-request-in-javascript\nconst fetch = window.fetch;\nwindow.fetch = async function (...args) {\n    const url = args[0];\n    const requestOptions = args[1];\n\n    if (requestOptions.method === 'GET' && url.includes('v0/state/table')) {\n        args = await interceptorHooks.stateTable.pre(...args);\n    } else if (requestOptions.method === 'GET' && url.includes('/v0/search/transactions')) {\n        args = await interceptorHooks.searchTransactions.pre(...args);\n    }\n\n    const result = await fetch(...args);\n\n    if (requestOptions.method === 'GET' && url.includes('v0/state/table')) {\n        await interceptorHooks.stateTable.post(result);\n    } else if (requestOptions.method === 'GET' && url.includes('/v0/search/transactions')) {\n        await interceptorHooks.searchTransactions.post(result);\n    }\n\n    return result;\n}\n\nfunction authHeader(accountName, permission, privKey, pubKey) {\n    let now = new Date();\n    now = now.toISOString();\n    const sign = ecc.sign(now, privKey);\n\n    return {\n        AuthName: accountName,\n        AuthPerm: permission,\n        AuthKey: pubKey,\n        AuthSignature: sign,\n        AuthData: now\n    }\n}\n\nfunction addAuthHeader(accountName, permission, privKey, pubKey) {\n    return (...args) => {\n        const url = args[0];\n        const requestOptions = args[1];\n\n        requestOptions.headers = {\n            ...requestOptions.headers,\n            ...authHeader(accountName, permission, privKey, pubKey)\n        }\n\n        args[1] = requestOptions;\n        return args;\n    }\n}\n\nexport function setInterceptors(accountName, permission, privKey, pubKey) {\n    interceptorHooks.stateTable.pre = async (...args) => {\n        return addAuthHeader(accountName, permission, privKey, pubKey)(...args);\n    }\n\n    // interceptorHooks.stateTable.post = async(results) => {\n    //     console.log('stateTablePostHook', results)\n    // }\n\n    interceptorHooks.searchTransactions.pre = async (...args) => {\n        return addAuthHeader(accountName, permission, privKey, pubKey)(...args);\n    }\n\n    // interceptorHooks.searchTransactions.post = async(results) => {\n    //     console.log('searchTransactionsPostHook', results)\n    // }\n}","let settings = {\n    eosio: {\n        nodeos: \"http://localhost:4000\",\n        blockExplorerUrl: \"http://localhost:8080\",\n    },\n    dfuseOptions: {\n        apiKey: \"web_abcdef123456789\",\n        authUrl: \"null://\",\n        secure: false,\n        network: \"localhost:4000\"\n    },\n    google: {\n        apiKey: \"AIzaSyDMa6KMn669HY33Qrdu5gd0ggyf5C8G4WQ\"\n    },\n    env: 'development'\n};\n\nif (process.env.REACT_APP_NODE_ENV === \"production\") {\n    settings.env = \"production\"\n    settings.eosio.nodeos = \"https://server-civic.conscious-cities.com\";\n    settings.dfuseOptions.network = \"\";\n    settings.eosio.blockExplorerUrl = \"https://blockchain-civic.conscious-cities.com\";\n    settings.dfuseOptions.network = \"server-civic.conscious-cities.com\"\n    settings.dfuseOptions.secure = true;\n}\n\nsettings.isLiveEnvironment = function () {\n    return settings.env === \"production\";\n}\n\nexport default settings;","import { createDfuseClient } from '@dfuse/client';\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';\nimport ecc from 'eosjs-ecc';\nimport { copyObj } from './objects';\nimport { setInterceptors } from './DfuseRequestHooks';\n\nimport settings from '../settings';\n\nexport default class Accountability {\n    // SEE account FOR TYPES!!!\n    // import {AccountExtended, SearchTransactionsResponseExtended} from '../types/accounts.ignore'\n\n    rpc; // {JsonRpc} read from blockchain with eosjs\n    api; // {Api} interact with blockchain with eosjs\n    dfuseClient; // {DfuseClient} use enhanced blockchain api\n    account; // { accountName, permission, pubKey}\n\n    /** \n     * @param {Object} network\n     * @param {string} network.nodeos - http origin nameo of nodeos with http api enabled\n     * @param {DfuseOptions} network.dfuseOptions - dfuse API options\n     */\n    constructor(network = { nodeos: settings.eosio.nodeos, dfuseOptions: settings.dfuseOptions }) {\n        if (settings.isLiveEnvironment()) settings.secure = true;\n\n        // Front end settings\n        this.rpc = new JsonRpc(network.nodeos);\n        const dfuseOptions = network.dfuseOptions;\n\n        // Back end settings (provide a fetch and ws instanch)\n        // this.rpc = new JsonRpc(network.nodeos, { fetch })\n        // const dfuseOptions = network.dfuseOptions;\n        // dfuseOptions.httpClientOptions = {\n        //     fetch: fetch\n        // }\n        // dfuseOptions.graphqlStreamClientOptions = {\n        //     socketOptions: {\n        //         webSocketFactory: (url) => ws(url, [\"graphql-ws\"])\n        //     }\n        // }\n        // dfuseOptions.streamClientOptions = {\n        //     socketOptions: {\n        //         webSocketFactory: (url) => ws(url)\n        //     }\n        // }\n\n        this.dfuseClient = createDfuseClient(dfuseOptions);\n    }\n\n    /** \n     * Adds account and private key to object for sending transactions\n     * @param {Object} account\n     * @param {string} account.accountName - account name\n     * @param {string} account.permission - account permission to use\n     * @param {string} account.privKey - private key\n     */\n    login(account) {\n        let accountCopy = copyObj(account);\n\n        const signatureProvider = new JsSignatureProvider([accountCopy.privKey]);\n        accountCopy.pubKey = ecc.privateToPublic(accountCopy.privKey, \"\");\n\n        setInterceptors(account.accountName, account.permission, account.privKey, accountCopy.pubKey);\n\n        delete accountCopy.privKey;\n        this.account = accountCopy;\n\n        const rpc = this.rpc;\n        this.api = TextEncoder ?\n            new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() }) :\n            new Api({ rpc, signatureProvider });\n    }\n\n\n    /**\n     * Searches the transaction history\n     * Extended response type also includes the human account name and common name that signed the tx\n     * @returns {SearchTransactionsResponseExtended}\n     */\n    // use this.dfuseClient.searchTransactions()\n\n\n    /**\n     * Gets information about an account, with extended response type with common name\n     * @response {AccountExtended}\n     */\n    // use this.rpc.get_account()\n\n\n    /** \n     * Sends a transaction to the blockchain\n     * @param {string} receiver - account on which to call contract execution\n     * @param {string} action - action to execut\n     * @param {obj} data - arguments for the action to execute with\n     * @param {Object} [options] - configuration parameters (optional)\n     * @param {string} [options.status] - throw error if tx status is not this\n     * @returns {Object} transaction object\n     */\n    async transact(receiver, action, data, options) {\n        const txData = {\n            actions: [{\n                account: receiver,\n                name: action,\n                authorization: [{\n                    actor: this.account.accountName,\n                    permission: this.account.permission,\n                }],\n                data: data,\n            }]\n        }\n        return await this.transact2(txData, options);\n    }\n\n    /** \n     * Sends a transaction to the blockchain\n     * @param {obj} txData - transaction data\n     * @param {Object} [options] - configuration parameters (optional)\n     * @param {string} [options.status] - throw error if tx status is not this\n     * @returns {Object} transaction object\n     */\n    async transact2(txData, options) {\n        try {\n            const tx = await this.api.transact(txData, {\n                blocksBehind: 3,\n                expireSeconds: 30,\n            })\n            if (options) {\n                if (tx.processed.error_code) throw Error(\"Failed with error code: \" + tx.processed.error_code);\n                if (options.status && tx.processed.receipt.status !== options.status) throw Error(\"Tx status is \" + tx.processed.receipt.status);\n            }\n            return tx;\n        } catch (e) {\n            console.log('transact', txData)\n            console.log('\\nCaught exception: ' + e);\n            if (e instanceof RpcError)\n                console.error(JSON.stringify(e.json, null, 2));\n            else {\n                console.error(e)\n                throw Error(e);\n            }\n        }\n    }\n\n    /** \n     * Casts an eosio time_point type to a Date\n     * @param {string} timePoint - time_point\n     * @returns {Date} date\n     */\n    static timePointToDate(timePoint) {\n        return new Date(timePoint + 'Z')\n    }\n}","import axios from 'axios';\r\nimport settings from '../settings';\r\n\r\nconst Api = axios.create({\r\n  baseURL: settings.eosio.nodeos,\r\n});\r\n\r\nexport default Api;\r\n","export default class Contract {\n    /**\n     * @param {string} contractAccount - the name of the account on the network where the smart contract lives\n     * @param {Object | Accountability | Eosio} eosio - eosio object\n     * @param {Api} eosio.api - eosjs Api\n     * @param {JsonRpc} eosio.rpc - eosjs JsonRpc\n     */\n    constructor(contractAccount, eosio) {\n        this.contractAccount = contractAccount;\n        this.eosio = eosio;\n    }\n\n    /**\n     * Initializes the contract to have useful action and table access functions\n     *\n     * The initialised object will have one function for each of the\n     * - actions on the smart contract. These functions take the same arguments in the same order as that they are defined in the smart contract and return a tx receipt.\n     * - tables in the smart contract. These functions take one argument each, the scope of the table to search within and return the data from the table.\n     */\n    async initializeContract() {\n        const abi = await this.eosio.rpc.get_abi(this.contractAccount);\n\n        let contractAccount = this.contractAccount;\n        let c = this;\n\n        // Create actions calls\n        for (let action of abi.abi.actions) {\n            const name = action.name;\n            let fields;\n            abi.abi.structs.forEach((struct) => {\n                if (struct.name === action.type) {\n                    fields = struct.fields;\n                }\n            })\n\n            c[name] = async function (...args) {\n                let len = args.length;\n                if (len !== fields.length) {\n                    console.error(name + '()', args)\n                    throw new Error(\"Number of arguments does not match action\");\n                }\n\n                const data = {};\n                for (let i = 0; i < len; i++) {\n                    data[fields[i].name] = args[i]\n                }\n\n                return await this.eosio.transact(contractAccount, name, data, { status: \"executed\" });\n            }\n        }\n\n        // Create table getters\n        for (let table of abi.abi.tables) {\n            const name = table.name;\n            c[name] = async function (scope) {\n                return await this.eosio.dfuseClient.stateTable(contractAccount, scope, name);\n            }\n            c[name + 'Row'] = async function (scope, primaryKey, keyType) {\n                return await this.eosio.dfuseClient.stateTableRow(contractAccount, scope, name, primaryKey, { keyType })\n            }\n        }\n    }\n}","export const ProposalCategory = {\n    Green: 0,\n    Kids: 1,\n    Road: 2\n}\n\nexport const ProposalType = {\n    Create: 0,\n    Remove: 1,\n    Update: 2\n}\n\nexport const ProposalStatus = {\n    Proposed: 0,\n    Reviewing: 1,\n    Approved: 2,\n    Rejected: 3,\n    VotePassed: 4,\n    VoteFailed: 5,\n    Actioned: 6,\n    Closed: 7\n}\n\n\nexport class Proposal {\n    title;\n    description;\n    category;\n    budget;\n    type;\n    photos;\n    location;\n}\n\nexport class ProposalExtended extends Proposal {\n    proposalId;\n    status; // also used for new status when updating\n    regulations;\n    comment;\n}\n\nexport class ProposalDetailed extends ProposalExtended {\n    created_time;\n    approved_time;\n    voted;\n    yes_vote_count;\n}\n\nexport class ProposalHistory {\n    timestamp;\n    authorizer;\n    authorizerCommonName;\n    humanAuthorizer;\n    humanAuthorizerCommonName;\n    status;\n    comment;\n    txId;\n}\n\nexport class MyAccount {\n    accountName;\n    commonName;\n    privKey;\n}\n","import Accountability from './Accountability'\nimport Api from './Api'\nimport Contract from './Contract';\nimport { ProposalStatus } from '../types/civic'\nimport ecc from 'eosjs-ecc';\nimport crypto from 'crypto'\nimport { wait } from './objects';\n\nexport default class Civic {\n    // SEE civic AND accounts FOR TYPES!!!\n    // import { ProposalCategory, ProposalStatus, ProposalType,\n    //     Proposal, ProposalDetailed, ProposalExtended, ProposalHistory } from '../types/civic.ignore';\n    // import { AccountExtended } from '../types/accounts.ignore';\n\n\n    accountability; // {Accountability}\n    civicContract; // {Contract}\n    account; // {MyAccount}\n\n    constructor() {\n        this.accountability = new Accountability();\n        this.civicContract = new Contract('civic', this.accountability);\n    }\n\n\n    /** \n     * Login to account using private key\n     * Initializes the civicContract\n     * @param {string} accountName - username\n     * @param {string} commonName - common name e.g. 'Jack Tanner'\n     * @param {string} privKey - private key\n     */\n    async accountLoginWithKey(accountName, commonName, privKey) {\n        this.accountability.login({ accountName, permission: 'active', privKey });\n        await this.civicContract.initializeContract();\n\n        this.account = {\n            accountName: accountName,\n            commonName: commonName,\n            privateKey: privKey\n        }\n    }\n\n    /** \n     * Login to account\n     * Initializes the civicContract\n     * @param {string} accountName - username\n     * @param {string} password - password\n     * @returns {AccountExtended}\n     */\n    async accountLogin(accountName, password) {\n        const privKey = ecc.seedPrivate(crypto.createHash(\"sha256\").update(accountName + password).digest(\"hex\"))\n        const pubKey = ecc.privateToPublic(privKey)\n\n        try {\n            const response = await Api.post('login', {\n                accountName,\n                pubKey\n            })\n\n            this.accountability.login({ accountName, permission: 'active', privKey })\n            await this.civicContract.initializeContract()\n\n            this.account = {\n                accountName: accountName,\n                commonName: response.data.commonName,\n                privateKey: privKey\n            }\n\n            return parseAccountRes(response.data);\n        } catch (err) {\n            let error\n\n            if (err.response.data.includes('unknown key')) {\n                error = new Error('User not found')\n                error.status = 400\n                throw (error)\n            }\n\n            if (err.response.data.includes('Public keys do not match')) {\n                error = new Error('Password is incorrect')\n                error.status = 401\n                throw (error)\n            }\n\n            throw (err)\n        }\n    }\n\n\n    /** \n     * Create account with the common name provided\n     * Initializes the civicContract\n     * @param {string} accountName - username\n     * @param {string} password - password\n     * @param {string} commonName - common name e.g. 'Jack Tanner'\n     * @returns {AccountExtended}\n     */\n    async accountCreate(accountName, password, commonName) {\n        const privKey = ecc.seedPrivate(crypto.createHash(\"sha256\").update(accountName + password).digest(\"hex\"))\n        const pubKey = ecc.privateToPublic(privKey)\n\n        const response = await Api.post('create-account', {\n            commonName,\n            accountName,\n            pubKey\n        })\n\n        await this.accountability.login({ accountName, permission: 'active', privKey })\n        await this.civicContract.initializeContract()\n\n        this.account = {\n            accountName: accountName,\n            commonName: response.data.commonName,\n            privateKey: privKey\n        }\n\n        return parseAccountRes(response.data);\n    };\n\n    /** \n     * Get information about an account\n     * @param {string} accountName - username\n     * @returns {AccountExtended}\n     */\n    async accountGet(accountName) {\n        const response = await this.accountability.get_account(accountName);\n        return parseAccountRes(response.data);\n    };\n\n    /** \n     * Creates a new proposal as the logged in user\n     * @param {Proposal} proposal\n     * @returns {ProposalDetailed}\n     */\n    async proposalCreate(proposal) {\n        const tx = await this.civicContract.propcreate(this.account.accountName,\n            proposal.title,\n            proposal.description,\n            proposal.category,\n            proposal.budget,\n            proposal.type,\n            proposal.location);\n\n        await wait(1000);\n        const txDetailed = await this.accountability.dfuseClient.fetchTransaction(tx.transaction_id);\n\n        const blockNum = txDetailed.execution_trace.action_traces[0].block_num;\n        const decodedRows = await this.accountability.dfuseClient.stateAbiBinToJson('civic', 'proposals', [txDetailed.dbops[0].new.hex], blockNum)\n        const decodedRow = decodedRows.rows[0]\n\n        const proposalDetailed = {\n            title: proposal.title,\n            description: proposal.description,\n            category: proposal.category,\n            type: proposal.type,\n            location: proposal.location,\n            proposalId: decodedRow.proposal_id,\n            status: ProposalStatus.Proposed,\n            created: new Date(decodedRow.created),\n        }\n        if (proposal.budget) { proposalDetailed.budget = proposal.budget }\n        if (proposal.photos) { proposalDetailed.photos = proposal.photos }\n        return proposalDetailed;\n    }\n\n    /** \n     * Updates a proposal as the logged in user\n     * @param {ProposalExtended} proposal\n     * @returns {ProposalDetailed}\n     */\n    async proposalUpdate(proposal) {\n        const txData = {\n            actions: [{\n                account: 'civic',\n                name: 'propupdate',\n                authorization: [{\n                    actor: this.account.accountName,\n                    permission: this.accountability.account.permission,\n                }, {\n                    actor: 'gov', // need to sign as gov as well\n                    permission: 'active'\n                }],\n                data: {\n                    updater: this.account.accountName,\n                    proposal_id: proposal.proposalId,\n                    title: proposal.title,\n                    description: proposal.description,\n                    category: proposal.category,\n                    budget: proposal.budget,\n                    type: proposal.type,\n                    location: proposal.location,\n                    new_status: proposal.status,\n                    regulations: proposal.regulations,\n                    comment: proposal.comment\n                },\n            }]\n        }\n\n        const tx = await this.accountability.transact2(txData);\n\n        await wait(1000);\n        const txDetailed = await this.accountability.dfuseClient.fetchTransaction(tx.transaction_id);\n\n        const blockNum = txDetailed.execution_trace.action_traces[0].block_num;\n        const decodedRows = await this.accountability.dfuseClient.stateAbiBinToJson('civic', 'proposals', [txDetailed.dbops[0].new.hex], blockNum)\n        const decodedRow = decodedRows.rows[0];\n\n        const proposalDetailed = {\n            title: proposal.title,\n            description: proposal.description,\n            category: proposal.category,\n            type: proposal.type,\n            location: proposal.location,\n            proposalId: proposal.proposalId,\n            status: ProposalStatus.Proposed,\n            created: Accountability.timePointToDate(decodedRow.created),\n            updated: Accountability.timePointToDate(decodedRow.updated),\n            approved: Accountability.timePointToDate(decodedRow.approved),\n            status: proposal.status,\n        }\n        if (proposal.budget) { proposalDetailed.budget = proposal.budget }\n        if (proposal.photos) { proposalDetailed.photos = proposal.photos }\n        if (proposal.regulations) { proposalDetailed.regulations = proposal.regulations }\n\n        return proposalDetailed;\n    }\n\n    /** \n     * Votes on an open proposal as the logged in user\n     * @param {number} proposalId\n     * @param {boolean} vote - true = yes, false = no\n     * @returns {ProposalDetailed}\n     */\n    async proposalVote(proposalId, vote) { }\n\n    /** \n     * Returns a list of proposals ordered by date with optional filter\n     * @param {ProposalStatus} [status] - filter to use on proposals (optional)\n     * @returns {ProposalDetailed[]}\n     */\n    async proposalList(status = null) {\n        const proposalsQuery = await this.civicContract.proposals(this.civicContract.contractAccount)\n\n        // filter per status if not null\n        const proposals = status ? proposalsQuery.rows.filter(x => {\n            return x.json.status === status\n        }) : proposalsQuery.rows;\n\n        // return ProposalDetailed[] type\n        const response = proposals.map(x => ({\n            proposalId: x.json.proposal_id,\n            title: x.json.title,\n            description: x.json.description,\n            category: x.json.category,\n            budget: x.json.budget,\n            type: x.json.type,\n            location: x.json.location,\n            status: x.json.status,\n            photos: x.json.photos,\n            regulations: x.json.regulations,\n            created: Accountability.timePointToDate(x.json.approved),\n            approved: Accountability.timePointToDate(x.json.approved),\n            updated: Accountability.timePointToDate(x.json.updated),\n            voted: x.json.voted,\n            yesVoteCount: x.json.yes_vote_count,\n        }))\n\n        // sort by created date\n        response.sort((a, b) => {\n            if (a.created > b.created) { return 1; }\n            if (a.created < b.created) { return -1; }\n            return 0;\n        })\n\n        return response\n    }\n\n    /** \n     * Returns a proposals \n     * @param {number} proposalId\n     * @returns {ProposalDetailed}\n     */\n    async proposalGet(proposalId) {\n        const proposalsQuery = await this.civicContract.proposalsRow(this.civicContract.contractAccount, proposalId, 'uint64')\n\n        const proposal = proposalsQuery.row.json\n\n        return {\n            proposalId: proposal.proposal_id,\n            title: proposal.title,\n            description: proposal.description,\n            category: proposal.category,\n            budget: proposal.budget,\n            type: proposal.type,\n            location: proposal.location,\n            status: proposal.status,\n            photos: proposal.photos,\n            regulations: proposal.regulations,\n            created: Accountability.timePointToDate(proposal.approved),\n            approved: Accountability.timePointToDate(proposal.approved),\n            updated: Accountability.timePointToDate(proposal.updated),\n            voted: proposal.voted,\n            yesVoteCount: proposal.yes_vote_count,\n        }\n    }\n\n    /** \n     * Returns a proposals history of who has done what actions\n     * @param {number} proposalId\n     * @returns {ProposalHistory[]}\n     */\n    async proposalHistory(proposalId) {\n        let q = `receiver:${this.civicContract.contractAccount} event.proposal_id:${proposalId}`\n        const proposalQuery = await this.accountability.dfuseClient.searchTransactions(q);\n        const proposalTxs = proposalQuery.transactions;\n\n        const proposalsActions = [];\n\n        if (proposalTxs && proposalTxs.length > 0) {\n            for (let tx of proposalTxs) {\n                const data = tx.lifecycle;\n                const actionData = data.execution_trace.action_traces[0].act;\n\n                // TODO needs to handle txs with multiple signatures and authorities (also in BE)\n                const proposalData = {\n                    txId: data.id,\n                    action: actionData.name,\n                    timestamp: Accountability.timePointToDate(data.execution_trace.block_time),\n                    authHuman: data.account_authorizers[0],\n                    authHumanCommonName: data.account_authorizers_common_names[0],\n                    data: actionData.data,\n                    status: mapActionToStatus(actionData.name)\n                }\n                if (actionData.name === \"propupdate\") proposalData.status = actionData.data.new_status;\n                if (actionData.data.comment) proposalData.comment = actionData.data.comment;\n\n                proposalsActions.push(proposalData);\n            }\n        }\n\n        proposalsActions.sort((a, b) => {\n            if (a.timestamp > b.timestamp) { return 1; }\n            if (a.timestamp < b.timestamp) { return -1; }\n            return 0;\n        })\n\n        return proposalsActions;\n    }\n}\n\nfunction parseAccountRes(data) {\n    const val = {\n        accountName: data.account_name,\n        commonName: data.commonName,\n        type: data.type,\n        created: Accountability.timePointToDate(data.created),\n        permissions: data.permissions,\n        contractDeployed: data.last_code_update !== \"1970-01-01T00:00:00.000\",\n    }\n    if (val.contractDeployed) {\n        val.lastContractUpdate = Accountability.timePointToDate(data.last_code_update);\n    }\n    return val;\n}\n\nfunction mapActionToStatus(actionName) {\n    switch (actionName) {\n        case \"propcreate\":\n            return ProposalStatus.Proposed;\n        case \"propupdate\":\n            return ProposalStatus.Reviewing;\n        default:\n            throw new Error(\"Invalid action name\");\n    }\n}\n","import React, { useEffect } from 'react';\nimport Civic from '../../services/Civic';\nimport { ProposalCategory, ProposalType, ProposalStatus } from '../../types/civic';\n\nfunction Home() {\n\n    useEffect(() => {\n        async function main() {\n            let civic = new Civic(); // put this in context API, or use singleton\n\n            let accountLoginRes;\n            try {\n                accountLoginRes = await civic.accountLogin('jack', 'Password1234!');\n                console.log('accountLogin() - jack 1', accountLoginRes);\n            } catch (e) {\n                const accountCreateRes = await civic.accountCreate('jack', 'Password1234!', 'Jack Tanner');\n                console.log('accountCreate()', accountCreateRes);\n            }\n\n            const proposal = {\n                title: 'Build a flowerbed next to John\\'s tacos',\n                description: description,\n                category: ProposalCategory.Green,\n                budget: 0,\n                type: ProposalType.Create,\n                photos: [],\n                location: createLocation()\n            }\n\n            const proposalData = await civic.proposalCreate(proposal);\n            console.log('proposalCreate()', proposalData)\n            const proposalId = proposalData.proposalId;\n\n            accountLoginRes = await civic.accountLogin('tijn', 'Password123');\n            console.log('accountLogin() - tijn', accountLoginRes);\n            proposal.proposalId = proposalId;\n            proposal.status = ProposalStatus.Reviewing;\n            let proposalUpdateRes = await civic.proposalUpdate(proposal);\n            console.log('proposalUpdate()', proposalUpdateRes);\n\n            proposal.regulation = 'RM 3212';\n            proposal.budget = 2300.00;\n            proposal.comment = 'Regulations checked and budget added'\n            proposal.status = ProposalStatus.Approved;\n            proposalUpdateRes = await civic.proposalUpdate(proposal);\n            console.log('proposalUpdate()', proposalUpdateRes);\n\n            accountLoginRes = await civic.accountLogin('jack', 'Password1234!');\n            console.log('accountLogin() - jack 2', accountLoginRes);\n            const proposalVoteRes = await civic.proposalVote(proposalId, true);\n            console.log('proposalVote', proposalVoteRes);\n\n            let proposals = await civic.proposalList();\n            console.log('proposalList()', proposals);\n            proposals = await civic.proposalList(ProposalStatus.Approved);\n            console.log('proposalList(Approved)', proposals);\n\n            const proposalDetails = await civic.proposalGet(proposalId);\n            console.log('proposalGet()', proposalDetails);\n            const proposalHistory = await civic.proposalHistory(proposalId);\n            console.log('proposalHistory()', proposalHistory);\n        }\n\n        main();\n    })\n    return (\n        <div>\n            Here is the app!\n        </div>\n    )\n}\n\nfunction createLocation() {\n    const lng = 52.1135031 + Math.random() * 0.01;\n    const lat = 4.2829047 + Math.random() * 0.01;\n    return `${lng},${lat}`;\n}\n\n// const description = 'Lorem ipsum dolor sit amet';\nconst description = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis imperdiet consectetur convallis. Fusce elementum urna at velit venenatis malesuada a eu libero. Fusce sed nisl tempus, ultrices quam sit amet, ultrices nulla. Fusce vulputate vestibulum lacinia. Phasellus ultrices justo dolor, sit amet tempus nisl semper feugiat. Suspendisse imperdiet nec urna sed pulvinar. Sed sit amet leo sollicitudin, blandit massa at, lacinia quam. Aenean dapibus euismod tortor, id pharetra libero. Sed tempus vulputate ullamcorper. Curabitur porttitor, ex eget lobortis venenatis, metus sapien scelerisque metus, sed laoreet lacus odio non turpis. Donec hendrerit efficitur ornare. Pellentesque molestie neque elit, vitae porttitor tellus posuere non. Nulla lobortis, turpis non suscipit imperdiet, magna metus scelerisque lacus, id feugiat tortor tellus eu orci. \\\n    \\\n    Morbi ultricies nibh nisi, vel rutrum elit consequat vel. Sed pretium purus eu ipsum hendrerit dapibus. Ut nulla leo, tincidunt et aliquam venenatis, porttitor vitae tortor. Donec eget tortor lobortis, auctor mi pharetra, rhoncus massa. Phasellus eget augue non lectus suscipit gravida a eu orci. Phasellus mollis purus ligula, non tempor ligula imperdiet eu. Nulla imperdiet pharetra orci, non commodo lorem luctus eu. Suspendisse at laoreet tortor. In fringilla cursus dictum. Integer molestie vestibulum fringilla. Sed id tincidunt magna. \\\n    \\\n    Duis vehicula tortor at ex pretium, in lacinia libero porta. Pellentesque risus dolor, viverra id molestie ut, ornare nec nulla. Phasellus tincidunt nisl eget lorem bibendum malesuada. Maecenas commodo imperdiet malesuada. Phasellus porttitor convallis nisi non porttitor. Nullam eleifend sem in quam placerat, quis semper augue dictum. Donec ultrices quam non lorem varius tristique eget a erat. Pellentesque vel imperdiet nisi. Sed turpis justo, mattis a ex in, pharetra dictum mauris. Duis eget tincidunt est. Praesent ut commodo magna. Maecenas imperdiet consequat mattis. Donec dignissim orci ac venenatis eleifend.'\n\nexport default Home;","\nexport function setUserStorage(accountName, commonName, privKey) {\n    const user = {\n        accountName,\n        commonName,\n        privKey\n    }\n    localStorage.setItem('user', JSON.stringify(user));\n}\n\nexport function getUserStorage() {\n    const userStr = localStorage.getItem('user');\n    if (userStr) {\n        return JSON.parse(userStr);\n    }\n}\n\nexport function clearUserStorage() {\n    localStorage.removeItem('user');\n}","import React, { useState, useContext, useEffect, createContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Civic from '../services/Civic';\r\nimport settings from '../settings';\r\nimport { getUserStorage, setUserStorage, clearUserStorage } from './storage';\r\n\r\nlet civic = new Civic();\r\nconst authContext = createContext();\r\n\r\nfunction useProvideAuth() {\r\n    const [isLoggedInValue, setIsLoggedIn] = useState(false);\r\n\r\n    async function isLoggedIn() {\r\n        if (isLoggedInValue === true) return true;\r\n\r\n        const user = getUserStorage();\r\n        if (user) {\r\n            await civic.accountLoginWithKey(user.accountName, user.commonName, user.privKey)\r\n            setIsLoggedIn(true);\r\n            return true;\r\n        } else {\r\n            if (!settings.isLiveEnvironment()) {\r\n                await civic.accountLogin('tijn', 'Password123');\r\n                setUserStorage('tijn', civic.account.commonName, civic.account.privateKey);\r\n                setIsLoggedIn(true);\r\n                return true;\r\n            } else {\r\n                return isLoggedInValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    async function login(accountName, password) {\r\n        await civic.accountLogin(accountName, password);\r\n        setUserStorage(accountName, civic.account.commonName, civic.account.privateKey);\r\n        setIsLoggedIn(true);\r\n    }\r\n\r\n    async function createAccount(accountName, password, commonName) {\r\n        await civic.accountCreate(accountName, password, commonName);\r\n        setUserStorage(accountName, commonName, civic.account.privateKey);\r\n        setIsLoggedIn(true);\r\n    }\r\n\r\n    async function logout() {\r\n        clearUserStorage();\r\n        setIsLoggedIn(false);\r\n    }\r\n\r\n    return {\r\n        civic,\r\n        isLoggedIn,\r\n        login,\r\n        createAccount,\r\n        logout\r\n    };\r\n}\r\n\r\nexport function ProvideAuth({ children }) {\r\n    const authProvider = useProvideAuth();\r\n\r\n    return (\r\n        <authContext.Provider value={authProvider}>\r\n            {children}\r\n        </authContext.Provider>\r\n    );\r\n}\r\n\r\nexport const ConsumeAuth = () => {\r\n    return useContext(authContext);\r\n};\r\n\r\nProvideAuth.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ButtonSourceComponent from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function ButtonComponent(\r\n    {\r\n        text,\r\n        type,\r\n        loading = false,\r\n        backgroundColor = '#227B3C',\r\n        color = '#fff',\r\n        loaderColor = '#fff'\r\n    }) {\r\n    const CircularProgressComponent = withStyles({\r\n        root: {\r\n            color: loaderColor\r\n        }\r\n    })(CircularProgress);\r\n    \r\n    const Button = withStyles({\r\n        root: {\r\n            backgroundColor: loading ? 'rgba(79,79,79, 0.26)' : backgroundColor,\r\n            borderRadius: 3,\r\n            border: 0,\r\n            color,\r\n            height: 36,\r\n            width: 100,\r\n            padding: '0 30px',\r\n            marginLeft: '10px'\r\n        },\r\n        label: {\r\n            textTransform: 'capitalize',\r\n        },\r\n    })(ButtonSourceComponent);\r\n    \r\n\r\n    return (\r\n        <Button disabled={loading} type={type}>\r\n            {loading ? <CircularProgressComponent size={14} className=\"circular-progress\" /> : text}\r\n        </Button>\r\n    );\r\n}\r\n\r\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from '@material-ui/core';\nimport TextField from \"@material-ui/core/TextField\";\nimport { ErrorMessage } from \"@hookform/error-message\";\n\nexport default function TextInput(props) {\n    let color = '#227B3C';\n    if (props.color === \"blue\") {\n        color = '#1261A3';\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        margin: {\n            margin: theme.spacing(1),\n        },\n        commonText: {\n            \"& label.Mui-focused\": {\n                color: color,\n            },\n            \"& .MuiInputBase-root.MuiInput-underline:after\": {\n                borderBottomColor: color,\n            }\n        }\n    }));\n\n    const classes = useStyles();\n    const [defaultText, setDefaultText] = useState(props.defaultText)\n\n    return (\n        <>\n            <Grid className=\"input-container\">\n                <TextField\n                    name={props.name}\n                    className={classes.margin, classes.commonText}\n                    label={props.label}\n                    value={props.value}\n                    inputRef={props.registerRef}\n                />\n            </Grid>\n            <p className=\"createuser-msg\">{defaultText}</p>\n            <ErrorMessage\n                errors={props.errors}\n                name={props.name}\n                render={({ messages }) => {\n                    return messages\n                        ? Object.entries(messages).map(([type, message]) => (\n                            <p key={type}>{message}</p>\n                        ))\n                        : null;\n                }}\n            />\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Input from '@material-ui/core/Input';\nimport { Grid } from '@material-ui/core';\nimport { ErrorMessage } from \"@hookform/error-message\";\n\nexport default function PasswordInput(props) {\n    let color = '#227B3C';\n    if (props.color === \"blue\") {\n        color = '#1261A3'\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            '& label.Mui-focused': {\n                color: color,\n            },\n            '& .MuiInput-underline:after': {\n                borderBottomColor: color,\n            },\n        },\n        margin: {\n            margin: theme.spacing(1),\n        },\n        withoutLabel: {\n            marginTop: theme.spacing(3),\n        },\n        textField: {\n            width: '320px;',\n        }\n    }));\n\n    const classes = useStyles();\n    const [values, setValues] = useState({\n        amount: '',\n        password: '',\n        weight: '',\n        weightRange: '',\n        showPassword: false,\n    });\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <>\n            <Grid className=\"input-container\">\n                <div className={classes.root}>\n                    <FormControl className={clsx(classes.margin, classes.textField)}>\n                        <InputLabel htmlFor=\"standard-adornment-password\">{props.label}</InputLabel>\n                        <Input\n                            id=\"standard-adornment-password\"\n                            type={values.showPassword ? 'text' : 'password'}\n                            value={props.value}\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowPassword}\n                                        onMouseDown={handleMouseDownPassword}\n                                    >\n                                        {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                            name={props.name}\n                            inputRef={props.registerRef}\n                        />\n                    </FormControl>\n                </div>\n            </Grid>\n            <ErrorMessage\n                errors={props.errors}\n                name={props.name}\n                render={({ messages }) => {\n                    return messages\n                        ? Object.entries(messages).map(([type, message]) => (\n                            <p key={type}>{message}</p>\n                        ))\n                        : null;\n                }}\n            />\n        </>\n\n    );\n}\n","import { Typography } from '@material-ui/core';\nimport { createMuiTheme, withStyles } from \"@material-ui/core/styles\";\nimport background from './../assets/image/background.png';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: [\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif'\n        ].join(','),\n    },\n    Button: {\n        backgroundColor: '#227B3C', color: '#fff'\n    }\n});\n\nconst GreenTextTypography = withStyles({\n    root: {\n        fontSize: '72px',\n        color: '#227B3C',\n    }\n})(Typography);\n\nconst ValidatiionString = withStyles({\n    root: {\n        fontSize: '15px',\n        color: 'red',\n    }\n})(Typography);\n\nconst TitleSmallTextTypography = withStyles({\n    root: {\n        color: '#FAFFFB',\n        fontWeight: 'bold',\n        fontSize: '50px'\n    }\n})(Typography);\n\nconst TitleLargeTextTypography = withStyles({\n    root: {\n        color: '#FAFFFB',\n        fontWeight: 500,\n        fontSize: '72px',\n    }\n})(Typography);\n\nconst HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: 'lightgrey',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 400,\n        fontSize: theme.typography.pxToRem(12),\n        border: '1px solid #dadde9',\n    },\n}))(Tooltip);\n\n\nconst backgroundStyle = {\n    style: {\n        backgroundImage: `url(${background})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center 15 %',\n    },\n};\n\nexport {\n    theme,\n    GreenTextTypography,\n    TitleSmallTextTypography,\n    TitleLargeTextTypography,\n    backgroundStyle,\n    ValidatiionString,\n    HtmlTooltip\n}","import React from 'react';\nimport { ConsumeAuth } from '../../hooks/authContext'\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Grid } from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { Link } from '@material-ui/core';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { AccountCircle, Lock } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport ButtonComponent from '../../components/Button';\nimport TextInput from '../../components/TextInput';\nimport PasswordInput from '../../components/PasswordInput';\nimport {\n\tGreenTextTypography,\n\tTitleSmallTextTypography,\n\tTitleLargeTextTypography,\n\tbackgroundStyle,\n\tHtmlTooltip\n} from '../../components/Themes';\nimport './Login.scss';\n\nexport default function Login() {\n\tconst history = useHistory();\n\tconst authContext = ConsumeAuth()\n\n\tconst [loading, setLoading] = React.useState(false)\n\tconst [open, setOpen] = React.useState(false);\n\tconst [message, setMessage] = React.useState(null);\n\n\tconst handleClose = (_, reason) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst { register, errors, handleSubmit } = useForm({\n\t\tcriteriaMode: \"all\"\n\t});\n\n\tconst onSubmit = async ({ username, password }) => {\n\t\tsetLoading(true)\n\n\t\ttry {\n\t\t\tawait authContext.login(username, password);\n\t\t\thistory.push('/dashboard')\n\t\t} catch (err) {\n\t\t\tsetMessage(err.message)\n\t\t\tsetOpen(true);\n\t\t\tsetLoading(false)\n\t\t}\n\t};\n\n\tconst navigateCreatePage = () => {\n\t\thistory.push(\"/\")\n\t}\n\n\tconst GreenSmallTypography = withStyles({\n\t\troot: {\n\t\t\tfontSize: '15px',\n\t\t\tcolor: '#227B3C',\n\t\t}\n\t})(Typography);\n\n\tconst LogoIcon = withStyles({\n\t\troot: {\n\t\t\tcolor: '#227B3C',\n\t\t\tfontSize: 30,\n\t\t\tlineHeight: 0\n\t\t}\n\t})(AccountCircle);\n\n\tconst LoginLock = withStyles({\n\t\troot: {\n\t\t\tcolor: '#227B3C'\n\t\t}\n\t})(Lock);\n\n\tconst TitleLoginTypography = withStyles({\n\t\troot: {\n\t\t\tcolor: '#227B3C',\n\t\t\tfontSize: '30px',\n\t\t\tlineHeight: '35px'\n\t\t}\n\t})(Typography);\n\n\tconst navigateSecurityPage = () => {\n\t\twindow.open(\"security\", \"_blank\")\n\t}\n\n\tconst TitleLock = withStyles({\n\t\troot: {\n\t\t\tfontSize: \"14px\"\n\t\t}\n\t})(Lock);\n\n\treturn (\n\t\t<>\n\t\t\t<Snackbar\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t}}\n\t\t\t\topen={open}\n\t\t\t\tautoHideDuration={6000}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tmessage={message}\n\t\t\t\taction={\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n\t\t\t\t\t\t\tUNDO\n\t\t\t\t\t</Button>\n\t\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n\t\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t<Grid container spacing={0} direction=\"row\">\n\t\t\t\t<Grid container item xs={6} spacing={0} className=\"col-item col-left\">\n\t\t\t\t\t<Grid container direction=\"column\" style={backgroundStyle.style}>\n\t\t\t\t\t\t<Grid container direction=\"column\" justify=\"center\" alignContent=\"center\" className=\"subject-title\">\n\t\t\t\t\t\t\t<GreenTextTypography variant=\"h3\">\n\t\t\t\t\t\t\t\tConcious Cities\n\t\t\t\t\t\t\t</GreenTextTypography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid container direction=\"column\" justify=\"center\" alignContent=\"center\" className=\"description-title\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<TitleSmallTextTypography variant=\"h4\">shape</TitleSmallTextTypography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<TitleLargeTextTypography>YOUR CITY</TitleLargeTextTypography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<TitleSmallTextTypography variant=\"h5\">in new ways</TitleSmallTextTypography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid container item xs={6} spacing={0} className=\"col-item col-right\">\n\t\t\t\t\t<Grid container direction=\"column\" justify=\"center\" alignContent=\"center\" className=\"login-inner\">\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignContent=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t\t<Grid item className=\"logo-wrap\">\n\t\t\t\t\t\t\t\t<LogoIcon />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item className=\"left-margin\">\n\t\t\t\t\t\t\t\t<TitleLoginTypography>Login</TitleLoginTypography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\n\t\t\t\t\t\t\t<Grid container direction=\"column\" justify=\"center\" alignContent=\"center\">\n\t\t\t\t\t\t\t\t<div className=\"form-ele-wrap\">\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\n\t\t\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\t\t\tregisterRef={register({ required: \"Please enter a username.\" })}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-ele-wrap\">\n\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\tlabel=\"Enter your password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\n\t\t\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\t\t\tregisterRef={register({ required: \"Please enter a password.\" })}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid container item justify=\"center\" alignContent=\"center\">\n\t\t\t\t\t\t\t\t<Link className=\"login-account-link\" onClick={navigateCreatePage}>\n\t\t\t\t\t\t\t\t\tCREATE ACCOUNT\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid container item justify=\"center\" alignContent=\"center\">\n\t\t\t\t\t\t\t\t<ExpandMore />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n\t\t\t\t\t\t\t\t<HtmlTooltip\n\t\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t<div>{<TitleLock />}Proposals, voting and government actions are stored on the blockchain.\n\t\t\t\t\t\t\t\t\t\t\t\tThis data is cryptographically secured and cannot be forged or tampered\n\t\t\t\t\t\t\t\t\t\t\t\twith by anyone, including the government.&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"read-more-link\" onClick={navigateSecurityPage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tClick to learn more\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tarrow\n\t\t\t\t\t\t\t\t\tinteractive\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"encrypt-wrape\">\n\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t<GreenSmallTypography>\n\t\t\t\t\t\t\t\t\t\t\t\ttamper proof\n\t\t\t\t\t\t\t\t\t</GreenSmallTypography>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t<LoginLock />\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</HtmlTooltip>\n\t\t\t\t\t\t\t\t<Grid item className=\"login-button\">\n\t\t\t\t\t\t\t\t\t<ButtonComponent loading={loading} type=\"submit\" text=\"LOGIN\" />\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</>\n\t)\n}\n","import React from 'react';\nimport { ConsumeAuth } from '../../hooks/authContext'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Grid } from '@material-ui/core';\nimport { ExpandLess } from '@material-ui/icons';\nimport { Link } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { AccountCircle, Lock } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport ButtonComponent from '../../components/Button';\nimport TextInput from '../../components/TextInput';\nimport PasswordInput from '../../components/PasswordInput';\nimport {\n\tGreenTextTypography,\n\tTitleSmallTextTypography,\n\tTitleLargeTextTypography,\n\tbackgroundStyle,\n\tHtmlTooltip\n} from '../../components/Themes';\nimport './CreateAccount.scss'\n\nexport default function CreateAccount() {\n\tconst history = useHistory();\n\tconst authContext = ConsumeAuth();\n\n\tconst [loading, setLoading] = React.useState(false)\n\tconst [open, setOpen] = React.useState(false);\n\tconst [message, setMessage] = React.useState(null);\n\n\tconst handleClose = (_, reason) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst { register, errors, handleSubmit, watch } = useForm({\n\t\tcriteriaMode: \"all\"\n\t});\n\n\tconst onSubmit = async ({ username, password, firstname, lastname }) => {\n\t\tsetLoading(true)\n\n\t\ttry {\n\t\t\tawait authContext.createAccount(username, password, `${firstname} ${lastname}`)\n\t\t\thistory.push('/dashboard')\n\t\t} catch (err) {\n\t\t\tsetMessage(err.message)\n\t\t\tsetOpen(true);\n\t\t\tsetLoading(false)\n\t\t}\n\t};\n\n\tconst navigateLoginPage = () => {\n\t\thistory.push(\"/login\")\n\t}\n\n\tconst navigateSecurityPage = () => {\n\t\twindow.open(\"security\", \"_blank\")\n\t}\n\n\tconst GreenSmallTypographyCreate = withStyles({\n\t\troot: {\n\t\t\tfontSize: '15px',\n\t\t\tcolor: '#1261A3',\n\t\t}\n\t})(Typography);\n\n\tconst CreateLock = withStyles({\n\t\troot: {\n\t\t\tcolor: '#1261A3'\n\t\t}\n\t})(Lock);\n\n\tconst TitleLock = withStyles({\n\t\troot: {\n\t\t\tfontSize: \"14px\"\n\t\t}\n\t})(Lock);\n\n\tconst LogoCreateUserIcon = withStyles({\n\t\troot: {\n\t\t\tcolor: '#1261A3',\n\t\t\tfontSize: 30,\n\t\t\tlineHeight: 0\n\t\t}\n\t})(AccountCircle);\n\n\tconst LogoCreateTitle = withStyles({\n\t\troot: {\n\t\t\tcolor: '#1261A3',\n\t\t\tfontSize: '30px',\n\t\t\tlineHeight: '35px'\n\t\t}\n\t})(Typography);\n\n\n\treturn (\n\t\t<>\n\t\t\t<Snackbar\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t}}\n\t\t\t\topen={open}\n\t\t\t\tautoHideDuration={6000}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tmessage={message}\n\t\t\t\taction={\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n\t\t\t\t\t\t\tUNDO\n\t\t\t\t\t</Button>\n\t\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n\t\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<Grid container spacing={0} direction=\"row\">\n\t\t\t\t<Grid container item xs={6} spacing={0} className=\"col-item col-left\">\n\t\t\t\t\t<Grid container direction=\"column\" style={backgroundStyle.style}>\n\t\t\t\t\t\t<Grid container direction=\"column\" justify=\"center\" alignContent=\"center\" className=\"subject-title\">\n\t\t\t\t\t\t\t<GreenTextTypography variant=\"h3\">\n\t\t\t\t\t\t\t\tConcious Cities\n\t\t\t\t\t\t\t</GreenTextTypography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid container direction=\"column\" justify=\"center\" alignContent=\"center\" className=\"description-title\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<TitleSmallTextTypography variant=\"h4\">shape</TitleSmallTextTypography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<TitleLargeTextTypography>YOUR CITY</TitleLargeTextTypography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<TitleSmallTextTypography variant=\"h5\">in new ways</TitleSmallTextTypography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid container item xs={6} spacing={0} className=\"col-item col-right\">\n\t\t\t\t\t<Grid container direction=\"column\" justify=\"center\" alignContent=\"center\" className=\"create-inner\">\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignContent=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t\t<Grid item className=\"logo-wrap\">\n\t\t\t\t\t\t\t\t<LogoCreateUserIcon />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item className=\"left-margin\">\n\t\t\t\t\t\t\t\t<LogoCreateTitle>Create account</LogoCreateTitle>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)} className=\"create-form\">\n\t\t\t\t\t\t\t<Grid container direction=\"column\" justify=\"center\" alignContent=\"center\">\n\t\t\t\t\t\t\t\t<div className=\"form-ele-wrap\">\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\tlabel=\"Create username\"\n\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\n\t\t\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\t\t\tregisterRef={register({\n\t\t\t\t\t\t\t\t\t\t\trequired: \"Up to 13 characters with letters and 0-5.\",\n\t\t\t\t\t\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: /^[0-5a-zA-Z]{1,13}$/,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: \"Up to 13 characters with letters and 0-5.\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\tdefaultText=\"Up to 13 characters with letters and 0-5\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-ele-wrap\">\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\tlabel=\"First name\"\n\t\t\t\t\t\t\t\t\t\tname=\"firstname\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\n\t\t\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\t\t\tregisterRef={register({ required: \"Please enter a firstname.\" })}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-ele-wrap\">\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\tlabel=\"Last name\"\n\t\t\t\t\t\t\t\t\t\tname=\"lastname\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\n\t\t\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\t\t\tregisterRef={register({ required: \"Please enter a lastname.\" })}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-ele-wrap\">\n\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\tlabel=\"Enter your password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\n\t\t\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\t\t\tregisterRef={register({\n\t\t\t\t\t\t\t\t\t\t\trequired: \"Please enter a password.\",\n\t\t\t\t\t\t\t\t\t\t\tminLength: {\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 8,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: \"At least 8 characters.\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-ele-wrap\">\n\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\tlabel=\"Enter your confirm password\"\n\t\t\t\t\t\t\t\t\t\tname=\"confirmpassword\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\n\t\t\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\t\t\tregisterRef={register({\n\t\t\t\t\t\t\t\t\t\t\trequired: \"Please enter a confirm password.\",\n\t\t\t\t\t\t\t\t\t\t\tvalidate: (value) => value === watch('password') || \"Passwords don't match.\"\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid container item justify=\"center\" alignContent=\"center\">\n\t\t\t\t\t\t\t\t<Link className=\"create-account-link\" onClick={navigateLoginPage}>\n\t\t\t\t\t\t\t\t\tLOGIN\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid container item justify=\"center\" alignContent=\"center\">\n\t\t\t\t\t\t\t\t<ExpandLess />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n\t\t\t\t\t\t\t\t<HtmlTooltip\n\t\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t<div>{<TitleLock />}Proposals, voting and government actions are stored on the blockchain.\n\t\t\t\t\t\t\t\t\t\t\t\tThis data is cryptographically secured and cannot be forged or tampered\n\t\t\t\t\t\t\t\t\t\t\t\twith by anyone, including the government.&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"read-more-link\" onClick={navigateSecurityPage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tClick to learn more\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tarrow\n\t\t\t\t\t\t\t\t\tinteractive\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"encrypt-wrape\">\n\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t<GreenSmallTypographyCreate>\n\t\t\t\t\t\t\t\t\t\t\t\ttamper proof\n\t\t\t\t\t\t\t\t\t\t</GreenSmallTypographyCreate>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t<CreateLock />\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</HtmlTooltip>\n\t\t\t\t\t\t\t\t<Grid item className=\"create-button\">\n\t\t\t\t\t\t\t\t\t<ButtonComponent loading={loading} type=\"submit\" text=\"Create\" backgroundColor='#1261A3' />\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</>\n\t)\n}\n","import React from 'react'\n\nexport default function Security() {\n    return (\n        <div>\n            <h1>Civic Security</h1>\n            <p>Description of some civic technical security details... (civilian friendly)</p>\n        </div>\n    )\n}\n","// Autocomplete.js\nimport React, { Component } from 'react';\nimport RoomIcon from '@material-ui/icons/Room';\nimport '../../pages/ProposalCreate/ProposalCreate.scss';\n\nclass AutoComplete extends Component {\n    constructor(props) {\n        super(props);\n        this.clearSearchBox = this.clearSearchBox.bind(this);\n    }\n\n    componentDidMount({ map, mapApi } = this.props) {\n        const options = {\n            types: ['address'],\n        };\n        this.autoComplete = new mapApi.places.Autocomplete(\n            this.searchInput,\n            options,\n        );\n        this.autoComplete.addListener('place_changed', this.onPlaceChanged);\n        this.autoComplete.bindTo('bounds', map);\n    }\n\n    componentWillUnmount({ mapApi } = this.props) {\n        mapApi.event.clearInstanceListeners(this.searchInput);\n    }\n\n    handleChange = prop => event => {\n        this.setState({ [prop]: event.target.value });\n    };\n\n    onPlaceChanged = ({ map, addplace } = this.props) => {\n        const place = this.autoComplete.getPlace();\n\n        if (!place.geometry) return;\n        if (place.geometry.viewport) {\n            map.fitBounds(place.geometry.viewport);\n        } else {\n            map.setCenter(place.geometry.location);\n            map.setZoom(17);\n        }\n\n        addplace(place);\n        this.searchInput.blur();\n    };\n\n    clearSearchBox() {\n        this.searchInput.value = '';\n    }\n\n    render() {\n        return (\n            <div className=\"search-wrap\">\n                <input\n                    className=\"search-input\"\n                    ref={(ref) => {\n                        this.searchInput = ref;\n                    }}\n                    type=\"text\"\n                    onFocus={this.clearSearchBox}\n                    placeholder=\"Location\"\n                />\n                <RoomIcon className=\"search-icon\"/>\n            </div>\n        );\n    }\n}\n\nexport default AutoComplete;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: absolute;\n    width: 38px;\n    height: 37px;\n    background-image: url(https://icon-library.com/images/pin-icon-png/pin-icon-png-9.jpg);\n    background-size: contain;\n    background-repeat: no-repeat;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    -webkit-transform: translate(-50%,-50%);\n    -ms-transform: translate(-50%,-50%);\n    transform: translate(-50%,-50%);\n    cursor: grab;\n`;\n\nconst Marker = ({ text, onClick }) => (\n    <Wrapper\n        alt={text}\n        onClick={onClick}\n    />\n);\n\nMarker.defaultProps = {\n    onClick: null,\n};\n\nMarker.propTypes = {\n    onClick: PropTypes.func,\n    text: PropTypes.string.isRequired,\n};\n\nexport default Marker;","// LocationGooglMaps.js\nimport React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport AutoComplete from './Autocomplete';\nimport Marker from './Marker';\n\nclass LocationGooglMap extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        mapApiLoaded: false,\n        mapInstance: null,\n        mapApi: null,\n        geoCoder: null,\n        places: [this.props.location.lat, this.props.location.lng],\n        center: [this.props.location.lat, this.props.location.lng],\n        zoom: this.props.zoom,\n        address: '',\n        draggable: true,\n        lat: this.props.location.lat,\n        lng: this.props.location.lng\n    };\n\n    componentWillMount() {\n        this.setCurrentLocation();\n    }\n\n    onMarkerInteraction = (childKey, childProps, mouse) => {\n        this.setState({\n            draggable: false,\n            lat: mouse.lat,\n            lng: mouse.lng\n        });\n    }\n\n    onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\n        this.setState({ draggable: true });\n        this._generateAddress();\n    }\n\n    _onChange = ({ center, zoom }) => {\n        this.setState({\n            center: center,\n            zoom: zoom,\n        });\n    }\n\n    _onClick = (value) => {\n        this.setState({\n            lat: value.lat,\n            lng: value.lng\n        });\n    }\n\n    apiHasLoaded = (map, maps) => {\n        this.setState({\n            mapApiLoaded: true,\n            mapInstance: map,\n            mapApi: maps,\n        });\n\n        this._generateAddress();\n    };\n\n    addPlace = (place) => {\n        this.setState({\n            places: [place],\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng()\n        });\n        this._generateAddress()\n    };\n\n    _generateAddress() {\n        const {\n            mapApi\n        } = this.state;\n        const geocoder = new mapApi.Geocoder;\n        geocoder.geocode({ 'location': { lat: this.state.lat, lng: this.state.lng } }, (results, status) => {\n            if (status === 'OK') {\n                if (results[0]) {\n                    this.zoom = 12;\n                    this.setState({ address: results[0].formatted_address });\n                } else {\n                    console.log('No results found');\n                }\n            } else {\n                console.log('Geocoder failed due to: ' + status);\n            }\n        });\n    }\n\n    // Get Current Location Coordinates\n    setCurrentLocation() {\n        if ('geolocation' in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                this.setState({\n                    center: [position.coords.latitude, position.coords.longitude],\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                });\n            });\n        }\n    }\n\n    render() {\n        const {\n            places, mapApiLoaded, mapInstance, mapApi,\n        } = this.state;\n\n        return (\n            <>\n                {mapApiLoaded && (\n                    <div>\n                        <AutoComplete map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\n                    </div>\n                )}\n                <GoogleMapReact\n                    center={this.state.center}\n                    zoom={this.state.zoom}\n                    draggable={this.state.draggable}\n                    onChange={this._onChange}\n                    onChildMouseDown={this.onMarkerInteraction}\n                    onChildMouseUp={this.onMarkerInteractionMouseUp}\n                    onChildMouseMove={this.onMarkerInteraction}\n                    onClick={this._onClick}\n                    bootstrapURLKeys={{\n                        key: 'AIzaSyDMa6KMn669HY33Qrdu5gd0ggyf5C8G4WQ',\n                        libraries: ['places', 'geometry'],\n                    }}\n                    yesIWantToUseGoogleMapApiInternals\n                    onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\n                >\n                    <Marker\n                        text={this.state.address}\n                        lat={this.props.lat}\n                        lng={this.props.lng}\n                    />\n                </GoogleMapReact>\n            </ >\n        );\n    }\n}\n\nexport default LocationGooglMap;","import React, { useState } from 'react'\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport logo from '../../assets/image/logo.png';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    navbar: {\n        width: '100%',\n        height: 85,\n        backgroundColor: '#C4C4C4',\n    },\n    logo: {\n        width: 60,\n        height: 60\n    },\n    logoImage: {\n        margin: 'auto',\n        display: 'block',\n        maxHeight: '100%',\n        maxWidth: '100%'\n    },\n    logoContainer: {\n        marginLeft: 80,\n        alignItems: \"center\"\n    },\n    searchContainer: {\n        maxWidth: 385,\n        maxHeight: 67,\n        minWidth: 330,\n        border: '1px solid #fff',\n        borderRadius: 50,\n        justifyContent: 'center',\n        alignItems: \"center\"\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 200,\n        \"& .MuiInput-underline:before\": {\n            borderColor: '#009688'\n        },\n        \"& .MuiSelect-icon\": {\n            top: 'calc(50% - 15px)'\n        },\n        '& .MuiNativeSelect-select:focus': {\n            backgroundColor: '#C4C4C4'\n        },\n    },\n    inputLabel: {\n        color: \"rgba(0, 0, 0, 0.5393)\",\n        \"&.Mui-focused\": {\n            color: \"#599C6D\"\n        }\n    },\n    searchIcon: {\n        width: 35,\n        height: 35,\n        backgroundColor: '#009688',\n        padding: 7,\n        borderRadius: '50%',\n        color: '#fff',\n        marginLeft: 58\n    },\n    buttonContainer: {\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        marginRight: 80\n    },\n}))\n\nconst LogoTitle = withStyles({\n    root: {\n        color: '#1261A3',\n        fontWeight: 500,\n        fontSize: '30px',\n    }\n})(Typography);\n\nconst NavbarTitle = withStyles({\n    root: {\n        color: '#1261A3',\n        fontWeight: '400',\n        fontSize: '18px',\n        lineHeight: '12px'\n    }\n})(Typography);\n\nconst CreateButton = withStyles({\n    root: {\n        backgroundColor: '#1261A3',\n        borderRadius: 3,\n        border: 0,\n        color: 'white',\n        height: 36,\n        padding: '0 20px',\n        marginLeft: '50px',\n        '&:hover': {\n            backgroundColor: '#1261A3'\n        }\n    },\n    label: {\n        textTransform: 'capitalize',\n        fontSize: '14px',\n        fontWeight: '500'\n    },\n})(Button);\n\nconst DashboardButton = withStyles({\n    root: {\n        border: 0,\n        color: '#1261A3',\n        height: 36,\n        padding: '0 20px',\n        marginLeft: '50px',\n        '&:hover': {\n            backgroundColor: '#C4C4C4'\n        }\n    },\n    label: {\n        textTransform: 'none',\n        fontSize: '18px',\n        fontWeight: 'normal'\n    },\n})(Button);\n\nexport default function Navbar() {\n    const classes = useStyles();\n    const [selectedProposal, setSelectedProposal] = useState('');\n    const history = useHistory();\n\n    const handleChange = (event) => {\n        setSelectedProposal(event.target.value);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Grid item container className={classes.navbar} alignItems=\"center\" justify=\"flex-start\">\n                <Grid item container xs={4} alignItems=\"center\">\n                    <Grid item container className={classes.logoContainer}>\n                        <Grid item className={classes.logo}>\n                            <img src={logo} className={classes.logoImage} />\n                        </Grid>\n                        <LogoTitle>Civic</LogoTitle>\n                    </Grid>\n                </Grid>\n                <Grid item container xs={4} alignItems=\"center\" justify=\"center\">\n                    <Grid item container className={classes.searchContainer}>\n                        <Grid item>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel id=\"search-proposal\" className={classes.inputLabel}>Status</InputLabel>\n                                <NativeSelect\n                                    value={selectedProposal}\n                                    onChange={handleChange}\n                                    id=\"search-proposal\"\n                                >\n                                    <option value=\"Search all proposals\">Search all proposals</option>\n                                    <option value=\"Proposed\">Proposed</option>\n                                    <option value=\"Reviewing by gov\">Reviewing by gov</option>\n                                    <option value=\"Approved by gov\">Approved by gov</option>\n                                    <option value=\"Rejected by gov\">Rejected by gov</option>\n                                    <option value=\"Voteable\">Voteable</option>\n                                    <option value=\" Vote passed\"> Vote passed</option>\n                                    <option value=\"Vote failed\">Vote failed</option>\n                                    <option value=\"Executing by gov\">Executing by gov</option>\n                                    <option value=\"Closed\">Closed</option>\n                                </NativeSelect>\n                            </FormControl>\n                        </Grid>\n                        <Grid item className={classes.searchIcon}>\n                            <SearchIcon />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item container xs={4} alignItems=\"center\">\n                    <Grid item container className={classes.buttonContainer}>\n                        <DashboardButton onClick={() => history.push('/dashboard')}>Dashboard</DashboardButton>\n                        <CreateButton onClick={() => history.push('/proposal-create')}>CREATE</CreateButton>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React, { useState } from 'react'\nimport { Grid, Typography, Checkbox, TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport background from '../../assets/image/heading.png';\nimport { Stars } from '@material-ui/icons';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CurrencyTextField from '@unicef/material-ui-currency-textfield'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Select from '@material-ui/core/Select';\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport { Lock } from '@material-ui/icons';\nimport LocationGooglMap from '../../components/Location/LocationGooglMap';\n// import DragDrop from '../../components/DragDrop';\nimport { useForm } from \"react-hook-form\";\nimport Navbar from '../../components/Navbar/Navbar';\nimport './ProposalCreate.scss';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    input: {\n        \"&::placeholder\": {\n            color: \"#599C6D\",\n            fontSize: 14,\n            opacity: 1\n        },\n        textAlign: \"left\"\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 200,\n    },\n    inputLabel: {\n        color: \"#599C6D\",\n        \"&.Mui-focused\": {\n            color: \"#599C6D\"\n        }\n    },\n    budgetInputStyle: {\n        paddingTop: '23px'\n    },\n    categoryTitle: {\n        paddingTop: '10px'\n    },\n    margin: {\n        margin: theme.spacing(5),\n    },\n    commonText: {\n        marginLeft: \"20px\",\n        \"& .MuiInputBase-input\": {\n            paddingBottom: '5px'\n        },\n        \"& label.Mui-focused\": {\n            color: '#ffffff',\n            fontSize: '18px'\n        },\n        \"& .MuiInputBase-root.MuiInput-underline:after\": {\n            borderBottomColor: '#ffffff',\n        },\n        \"& .MuiInput-underline:before\": {\n            borderBottom: \"none\"\n        },\n        \"& label + .MuiInput-formControl\": {\n            marginTop: '10px',\n        },\n        \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": {\n            borderBottom: \"none\"\n        },\n        \"& .makeStyles-inputLabel-118\": {\n            color: \"#ffffff\",\n            fontSize: \"25px\"\n        }\n    },\n    inputTitle: {\n        color: \"white\",\n        width: \"300px\",\n        fontSize: \"32px\",\n        disableUnderline: true\n    },\n    inputLabelTitle: {\n        color: \"white\",\n        fontSize: \"25px\",\n    }\n}));\n\nconst HearderCustomizeStar = withStyles({\n    root: {\n        color: '#FFFFFF',\n        width: '28px',\n        height: '28px',\n        marginBottom: '6px'\n    }\n})(Stars)\n\nconst TitleCategoryTypography = withStyles({\n    root: {\n        color: '#599C6D',\n        fontWeight: 500,\n        fontSize: '15px',\n    }\n})(Typography);\n\nconst ImageDragTypography = withStyles({\n    root: {\n        color: '#599C6D',\n        fontWeight: 400,\n        fontSize: '12px',\n        lineHeight: '14.06px',\n        marginBottom: '10px'\n    }\n})(Typography);\n\nconst CategoryCheckbox = withStyles({\n    root: {\n        color: '#599C6D',\n        fontSize: '14px',\n        '&$checked': {\n            color: '#599C6D',\n        },\n    },\n    checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst UploadButton = withStyles({\n    root: {\n        backgroundColor: '#1261A3',\n        borderRadius: 3,\n        border: 0,\n        color: 'white',\n        height: 36,\n        padding: '0 20px',\n        marginLeft: '10px'\n    },\n    label: {\n        textTransform: 'capitalize',\n        fontSize: '14px',\n        fontWeight: '500'\n    },\n})(Button);\n\nconst UploadSmallTypographyCreate = withStyles({\n    root: {\n        fontSize: '15px',\n        color: '#1261A3',\n    }\n})(Typography);\n\nconst UploadLock = withStyles({\n    root: {\n        color: '#1261A3'\n    }\n})(Lock);\n\nexport default function ProposalCreate() {\n    const classes = useStyles();\n\n    const [stateCheckBox, setStateCheckBox] = useState({\n        checkedA: false,\n        checkedB: false,\n        checkedC: false,\n        checkedD: false,\n        checkedE: false,\n        checkedF: false,\n        checkedG: false,\n        checkedH: false,\n    });\n\n    const [valueBudget, setValueBudget] = useState();\n\n    const [state, setState] = useState({\n        type: '',\n    });\n\n    const [description, setDescription] = useState({\n        content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna wirl Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna wirl Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna wirl Lorem ipsum dolor sit amet, consectetur adipisicing rl Lorem ipsum Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna wirl Lorem ipsum dolor sit ame\"\n    });\n\n    const [files, setFiles] = useState([])\n\n    const [hasErrorType, setHasError] = useState(false)\n\n    const [hasErrorCateory, setHasErrorCategory] = useState(false)\n\n    const [hasErrorDescription, setHasErrorDescription] = useState(false)\n\n    const [hasErrorTitle, setHasErrorTitle] = useState(false)\n\n    const [title, setTitle] = useState(\"\")\n\n    const handleDropDownImage = (files) => {\n        setFiles(files)\n    }\n\n    const { errors, handleSubmit } = useForm({\n        criteriaMode: \"all\"\n    });\n\n    const onSubmit = data => {\n        // Title validation\n        if (title == \"\") {\n            setHasErrorTitle(true);\n        } else {\n            setHasErrorTitle(false)\n        }\n        // Type validation\n        if (state.type == \"\") {\n            setHasError(true);\n        } else {\n            setHasError(false)\n        }\n        // Categories validation\n        for (const [key, value] of Object.entries(stateCheckBox)) {\n            if (value == true) {\n                setHasErrorCategory(false)\n                break;\n            } else {\n                setHasErrorCategory(true)\n            }\n        }\n        // Description validation\n        if (description.content.length >= 100 && description.content.length <= 580) {\n            setHasErrorDescription(false)\n        } else {\n            setHasErrorDescription(true)\n        }\n\n    };\n\n    const handleChange = (event) => {\n        const name = event.target.name;\n        if (event.target.value == \"\") {\n            setHasError(true)\n        } else {\n            setHasError(false)\n        }\n        setState({\n            ...state,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleChangeCheckboxs = (event) => {\n        if (event.target.checked) {\n            setHasErrorCategory(false);\n        } else {\n            setHasErrorCategory(true)\n        }\n        setStateCheckBox({ ...stateCheckBox, [event.target.name]: event.target.checked });\n    };\n\n    const CHARACTER_LIMIT = 580;\n\n    const handleChangeDescription = content => event => {\n        if (event.target.value.length >= 100 && event.target.value.length <= 580) {\n            setHasErrorDescription(false)\n        } else {\n            setHasErrorDescription(true)\n        }\n        setDescription({ ...description, [content]: event.target.value });\n    };\n\n    const handleChangeTitle = (e) => {\n        if (e.target.value == \"\") {\n            setHasErrorTitle(true)\n        } else {\n            setHasErrorTitle(false)\n        }\n        setTitle(e.target.value)\n    }\n\n    return (\n        <div className={classes.root}>\n            <Navbar />\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <Grid container direction=\"column\">\n                    <Grid className=\"hearder-wrap\">\n                        <img src={background} className=\"hearder-img\" />\n                        <Grid container direction=\"row\" className=\"hearder-title\" alignItems=\"center\">\n                            <HearderCustomizeStar />\n                            <TextField\n                                label=\"Name your idea\"\n                                className={classes.margin, classes.commonText}\n                                InputProps={{\n                                    className: classes.inputTitle\n                                }}\n                                InputLabelProps={{\n                                    className: classes.inputLabelTitle,\n                                }}\n                                value={title}\n                                onChange={handleChangeTitle}\n                            />\n                            {hasErrorTitle && <FormHelperText>Please select a title.</FormHelperText>}\n                        </Grid>\n                    </Grid>\n                    <div className=\"main-container\">\n                        <Grid container spacing={2}>\n                            <Grid item xs={7} className=\"left-wrap\">\n                                <Grid container item xs={12} spacing={4}>\n                                    <Grid item>\n                                        <CurrencyTextField\n                                            value={valueBudget}\n                                            currencySymbol=\"€\"\n                                            outputFormat=\"string\"\n                                            decimalCharacter=\".\"\n                                            digitGroupSeparator=\",\"\n                                            placeholder=\"Budget\"\n                                            onChange={(event, value) => setValueBudget(value)}\n                                            InputProps={{\n                                                classes: {\n                                                    input: classes.input\n                                                }\n                                            }}\n                                            className={classes.budgetInputStyle}\n                                        />\n                                    </Grid>\n                                    <Grid item className=\"type-wrape\">\n                                        <FormControl className={classes.formControl}>\n                                            <InputLabel htmlFor=\"type-select\" className={classes.inputLabel}>Type</InputLabel>\n                                            <Select\n                                                native\n                                                value={state.type}\n                                                onChange={handleChange}\n                                                inputProps={{\n                                                    name: 'type',\n                                                    id: 'type-select',\n                                                }}\n                                                errors={errors}\n                                            >\n                                                <option aria-label=\"\" value=\"\" />\n                                                <option value=\"new\">New</option>\n                                                <option value=\"upgrade\">Upgrade</option>\n                                                <option value=\"remove\">Remove</option>\n                                            </Select>\n                                            {hasErrorType && <FormHelperText>Please select a type.</FormHelperText>}\n                                        </FormControl>\n                                    </Grid>\n                                </Grid>\n                                <Grid container item xs={12} spacing={3} className=\"catergory-wrape\">\n                                    <Grid item>\n                                        <TitleCategoryTypography className={classes.categoryTitle}>Categories</TitleCategoryTypography>\n                                    </Grid>\n                                    <Grid item sm container className=\"category-checkbox-wrape\">\n                                        <Grid item xs={12}>\n                                            <FormControlLabel\n                                                control={\n                                                    <CategoryCheckbox\n                                                        checked={stateCheckBox.checkedA}\n                                                        onChange={handleChangeCheckboxs}\n                                                        name=\"checkedA\" />\n                                                }\n                                                label=\"Green space\"\n                                            />\n                                            <FormControlLabel\n                                                control={\n                                                    <CategoryCheckbox\n                                                        checked={stateCheckBox.checkedB}\n                                                        onChange={handleChangeCheckboxs}\n                                                        name=\"checkedB\" />\n                                                }\n                                                label=\"Kids\"\n                                            />\n                                            <FormControlLabel\n                                                control={\n                                                    <CategoryCheckbox\n                                                        checked={stateCheckBox.checkedC}\n                                                        onChange={handleChangeCheckboxs}\n                                                        name=\"checkedC\" />\n                                                }\n                                                label=\"Safety\"\n                                            />\n                                            <FormControlLabel\n                                                control={\n                                                    <CategoryCheckbox\n                                                        checked={stateCheckBox.checkedD}\n                                                        onChange={handleChangeCheckboxs}\n                                                        name=\"checkedD\" />\n                                                }\n                                                label=\"Accessibility\"\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <FormControlLabel\n                                                control={\n                                                    <CategoryCheckbox\n                                                        checked={stateCheckBox.checkedE}\n                                                        onChange={handleChangeCheckboxs}\n                                                        name=\"checkedE\" />\n                                                }\n                                                label=\"Art\"\n                                            />\n                                            <FormControlLabel\n                                                control={\n                                                    <CategoryCheckbox\n                                                        checked={stateCheckBox.checkedF}\n                                                        onChange={handleChangeCheckboxs}\n                                                        name=\"checkedF\" />\n                                                }\n                                                label=\"Health\"\n                                            />\n                                            <FormControlLabel\n                                                control={\n                                                    <CategoryCheckbox\n                                                        checked={stateCheckBox.checkedG}\n                                                        onChange={handleChangeCheckboxs}\n                                                        name=\"checkedG\" />\n                                                }\n                                                label=\"Roads\"\n                                            />\n                                            <FormControlLabel\n                                                control={\n                                                    <CategoryCheckbox\n                                                        checked={stateCheckBox.checkedH}\n                                                        onChange={handleChangeCheckboxs}\n                                                        name=\"checkedH\" />\n                                                }\n                                                label=\"Residential\"\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12} className=\"checkbox-helper\">\n                                            {hasErrorCateory && <FormHelperText>Please select a type.</FormHelperText>}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={11}>\n                                        <TextField\n                                            label=\"Description\"\n                                            inputProps={{\n                                                maxLength: CHARACTER_LIMIT,\n                                            }}\n                                            value={description.content}\n                                            helperText={`${description.content.length}/${CHARACTER_LIMIT}`}\n                                            onChange={handleChangeDescription(\"content\")}\n                                            margin=\"normal\"\n                                            multiline\n                                            rows={10}\n                                            fullWidth\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} className=\"description-helper\">\n                                        {hasErrorDescription && <FormHelperText>Description must be at min 100 to 580 characters. </FormHelperText>}\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item className=\"right-wrap\" xs={5}>\n                                <Grid item xs={12}>\n                                    <ImageDragTypography>Images</ImageDragTypography>\n                                    <DropzoneArea\n                                        dropzoneText=\"drag files here or click to upload\"\n                                        onChange={() => handleDropDownImage(files)}\n                                        filesLimit={1}\n                                        // showPreviewsInDropzone={true}\n                                    />\n                                    {/* <DragDrop /> */}\n\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <div className=\"googlmap-wrape\">\n                                        <LocationGooglMap location={{lat: 52.1135031, lng: 4.2829047}} zoom={15} />\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid className=\"upload-button\">\n                            <UploadButton type=\"submit\" >\n                                UPLOAD\n                            </UploadButton>\n                            <div className=\"encrypt-wrape\">\n                                <Grid item>\n                                    <UploadSmallTypographyCreate>\n                                        encrypted\n                                    </UploadSmallTypographyCreate>\n                                </Grid>\n                                <Grid item>\n                                    <UploadLock />\n                                </Grid>\n                            </div>\n                        </Grid>\n                    </div>\n                </Grid>\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Grid, Typography, Button, Paper, ButtonBase } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Logo from '../../assets/image/logo.png';\n\n\nconst CardTitle = withStyles({\n    root: {\n        color: '#000000',\n        fontWeight: 'normal',\n        fontSize: '18px',\n        lineHeight: '21px',\n        '&:hover': {\n            cursor: 'pointer'\n        },\n        marginTop: 10\n    }\n})(Typography);\n\nconst CardContentDescription = withStyles({\n    root: {\n        color: '#000000',\n        fontWeight: 'normal',\n        fontSize: '10px',\n        lineHeight: '24px',\n        marginTop: 10\n    }\n})(Typography);\n\nconst ReadmoreButton = withStyles({\n    root: {\n        backgroundColor: '#1261A3',\n        borderRadius: 3,\n        border: 0,\n        color: 'white',\n        height: 36,\n        maxWidth: 96,\n        '&:hover': {\n            backgroundColor: '#1261A3'\n        }\n    },\n    label: {\n        textTransform: 'capitalize',\n        fontSize: '12px',\n        fontWeight: 'normal'\n    },\n})(Button);\n\nexport default function Card(props) {\n    const style = {\n        root: {\n            flexGrow: 1,\n        },\n        mainContainer: {\n            marginTop: 30\n        },\n        cardWrap: {\n            maxWidth: 800,\n            margin: 'auto'\n        },\n        paper: {\n            padding: 10,\n            margin: 'auto',\n            maxWidth: 285,\n            marginBottom: 30,\n            height: 300\n        },\n        image: {\n            width: 283,\n            height: 185\n        },\n        img: {\n            margin: 'auto',\n            display: 'block',\n            maxWidth: '100%',\n            maxHeight: '100%'\n        },\n        cardContent: {\n            padding: 10\n        },\n        cardTitle: {\n            minHeight: 50\n        }\n    }\n    if (props.selected) {\n        style.paper.backgroundColor = 'lightgrey'\n    }\n    const useStyles = makeStyles((theme) => (style))\n\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.paper}>\n            <Grid container direction=\"column\">\n                <Grid item>\n                    <ButtonBase className={classes.image} onClick={props.onClick}>\n                        {props.imageUrl &&\n                            <img className={classes.img} alt={props.title} src={props.imageUrl} />\n                        }\n                        {!props.imageUrl &&\n                            <img className={classes.img} style={{ opacity: 0.1 }} src={Logo} />\n                        }\n                    </ButtonBase>\n                </Grid>\n                <Grid item container className={classes.cardContent} direction=\"column\">\n                    <Grid item container className={classes.cardTitle}>\n                        <Grid item xs>\n                            <CardTitle onClick={props.onClick}>{(props.title).slice(0, 30)}</CardTitle>\n                        </Grid>\n                        <ReadmoreButton onClick={props.onButtonClick}>READ MORE</ReadmoreButton>\n                    </Grid>\n                    <Grid item>\n                        <CardContentDescription>\n                            {(props.description).slice(0, 70)} ...\n                            </CardContentDescription>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport settings from '../../settings';\n\nconst MapContainer = (props) => {\n    const { selected } = props;\n    const mapStyles = {\n        height: \"86vh\",\n        width: \"100%\"\n    };\n    const defaultCenter = {\n        lat: 52.1135031, lng: 4.2829047\n    }\n    const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n\n    useEffect(() => {\n        if (selected && selected.proposalId) {\n            setCurrentPosition(selected.position);\n        }\n    })\n\n    return (\n        <LoadScript\n            googleMapsApiKey={settings.google.apiKey}>\n            <GoogleMap\n                mapContainerStyle={mapStyles}\n                zoom={props.zoom}\n                center={currentPosition}>\n                {\n                    props.proposalList.map(item => {\n                        return (\n                            <Marker\n                                key={item.proposalId}\n                                position={item.position}\n                                onClick={() => props.onSelect(item)}\n                            >\n                                {\n                                    (selected && selected.proposalId === item.proposalId) &&\n                                    (\n                                        <InfoWindow\n                                            position={item.position}\n                                            onCloseClick={() => props.onSelect({})}\n                                        >\n                                            <p>{item.title}</p>\n                                        </InfoWindow>\n                                    )\n                                }\n                            </Marker>\n                        )\n                    })\n                }\n\n            </GoogleMap>\n        </LoadScript>\n    )\n}\n\nexport default MapContainer;","import React, { useState, useEffect } from 'react'\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Navbar from '../../components/Navbar/Navbar';\nimport Card from './Card';\nimport Map from './Map';\nimport { ConsumeAuth } from '../../hooks/authContext';\nimport { useHistory } from \"react-router-dom\";\n\nfunction parseLocation(location) {\n    return {\n        lat: parseFloat(location.split(\",\")[0]),\n        lng: parseFloat(location.split(\",\")[1])\n    }\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    mainContainer: {\n        marginTop: 30\n    },\n    cardWrap: {\n        maxWidth: 800,\n        margin: 'auto',\n        maxHeight: 780,\n        overflowY: 'auto'\n    },\n}))\n\nfunction Dashboard(props) {\n    const classes = useStyles();\n    const [proposalList, setProposalList] = useState([]);\n    const authContext = ConsumeAuth();\n    const history = useHistory();\n\n    const [selected, setSelected] = useState({});\n\n    useEffect(() => {\n        async function main() {\n            if (!await authContext.isLoggedIn()) {\n                history.push('/login');\n                return;\n            }\n            let proposals = await authContext.civic.proposalList();\n            proposals = proposals.map(item => {\n                item.position = parseLocation(item.location)\n                return item;\n            });\n            setProposalList(proposals);\n        }\n\n        main();\n    }, []);\n\n    const navigateToProposal = (proposalId) => {\n        history.push(`/proposals/${proposalId}`);\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container direction=\"column\">\n                <Grid item>\n                    <Navbar />\n                </Grid>\n                <Grid item container className={classes.mainContainer}>\n                    <Grid item container xs={6}>\n                        {proposalList.length === 0 &&\n                            <div style={{ margin: 'auto' }} > No proposal were found</div>\n                        }\n                        {proposalList.length > 0 &&\n                            <Grid item container className={classes.cardWrap}>\n                                {proposalList.map(proposal =>\n                                    <Grid item xs={6} key={proposal.proposalId}>\n                                        <Card\n                                            title={proposal.title}\n                                            description={proposal.description}\n                                            imageUrl={proposal.photos}\n                                            selected={selected.proposalId === proposal.proposalId}\n                                            onClick={() => setSelected(proposal)}\n                                            onButtonClick={() => navigateToProposal(proposal.proposalId)}\n                                        />\n                                    </Grid>\n                                )}\n                            </Grid>\n                        }\n                    </Grid>\n                    <Grid item container xs={6}>\n                        <Map selected={selected} onSelect={(item) => setSelected(item)} proposalList={proposalList} zoom={15} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div >\n    );\n}\n\nexport default Dashboard;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home/Home';\nimport Login from './pages/Login/Login';\nimport CreateAccount from './pages/CreateAccount/CreateAccount';\nimport Security from './pages/Security/Security';\nimport PropsalCreate from './pages/ProposalCreate/ProposalCreate';\nimport Dashboard from './pages/Dashboard/Dashboard';\n\nconst Routes = () => (\n    <Router >\n        <Switch>\n            <Route exact path=\"/\">\n                <CreateAccount />\n            </Route>\n            <Route path=\"/login\">\n                <Login />\n            </Route>\n            <Route path=\"/test\">\n                <Home />\n            </Route>\n            <Route path=\"/security\">\n                <Security />\n            </Route>\n            <Route path=\"/proposal-create\">\n                <PropsalCreate />\n            </Route>\n            <Route path=\"/dashboard\">\n                <Dashboard />\n            </Route>\n        </Switch>\n    </Router >\n);\n\nexport default Routes;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ProvideAuth } from './hooks/authContext';\r\n\r\nconst AppProviders = props => {\r\n    const { children } = props;\r\n\r\n    return (\r\n    <ProvideAuth>{children}</ProvideAuth>\r\n    );\r\n};\r\n\r\nAppProviders.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default AppProviders;\r\n","import React from \"react\";\nimport Routes from \"./routes\";\nimport Providers from './providers';\nimport \"./App.css\";\nimport { ThemeProvider } from '@material-ui/styles';\nimport { theme } from './components/Themes';\n\nfunction App() {\n    return (\n        <div>\n            <Providers>\n                <ThemeProvider theme={theme}>\n                    <Routes history />\n                </ThemeProvider>\n            </Providers>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <App/> , document.getElementById('root') );"],"sourceRoot":""}